#!/usr/bin/env bash

# install-development-tools
# Optional environment variables:
#   TOOLS_DIR: where tools will be installed, defaults to "tools"
#
# Version: 0.0.20201110
# Author: Carlos C Soto
#
# This scripts install a set of development tools and install them on a directory
# The tools must be available on GitHub
# The tool must be a single file
# The online tool version is extracted from GitHub HTTP Location header
# The current version is stored on a .tool-name.version file

function github_online_version() {
    curl -s -I "$1" | grep -i ^location | awk '{print $2}' | xargs dirname | xargs basename
}

function install_on() {
    local github_url="${1}"
    local destination="${2}"
    local version_file="${3}"
    local version_content="${4}"

    curl --location --output "$destination" "$github_url"
    echo "$version_content" >"$version_file"
    chmod +x "$destination"
}

function upgrade_from_github() {
    local github_url="${1}"
    local destination="${2}"
    local version_file="${3}"
    local current_version="$(cat "$version_file")"
    local online_version="$(github_online_version "$github_url")"

    echo -n "Upgrade $destination: "
    if [ "$current_version" == "$online_version" ]; then
        echo "already on $current_version"
        return 0
    fi

    echo -n "from $current_version to $online_version ... "
    install_on "$github_url" "$destination" "$version_file" "$online_version"
    echo "OK"
    return 0
}

function install_from_github() {
    local github_url="${1}"
    local destination="${2}"
    local version_file="${3}"
    local current_version="$(github_online_version "$github_url")"

    echo -n "Install $destination: version $current_version ... "
    install_on "$github_url" "$destination" "$version_file" "$current_version"
    echo "OK"
    return 0
}

function install_upgrade() {
    local destination="${3}"
    local version_file="$(dirname "${3}")/.$(basename "${3}").version"
    local github_url="https://github.com/${1}/releases/latest/download/${2}"

    if [ -f "$destination" -a -f "$version_file" ]; then
        upgrade_from_github "$github_url" "$destination" "$version_file" && return 0
    fi

    install_from_github "$github_url" "$destination" "$version_file" && return 0

    return 1;
}

TOOLS_DIR="${TOOLS_DIR:-tools}"
mkdir -p "$TOOLS_DIR"

install_upgrade FriendsOfPHP/PHP-CS-Fixer php-cs-fixer.phar "${TOOLS_DIR}/php-cs-fixer"
install_upgrade squizlabs/PHP_CodeSniffer phpcbf.phar "${TOOLS_DIR}/phpcbf"
install_upgrade squizlabs/PHP_CodeSniffer phpcs.phar "${TOOLS_DIR}/phpcs"
install_upgrade phpstan/phpstan phpstan.phar "${TOOLS_DIR}/phpstan"
install_upgrade vimeo/psalm psalm.phar "${TOOLS_DIR}/psalm"
install_upgrade infection/infection infection.phar "${TOOLS_DIR}/infection"
